// <auto-generated />
using System;
using AgriSmart.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgriSmart.Infrastructure.Migrations
{
    [DbContext(typeof(AgriSmartContext))]
    partial class AgriSmartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgriSmart.Core.Entities.AnalyticalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Script")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnaliticalEntity");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.CalculationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CalculationSetting");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Catalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Catalog");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Container", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<double>("LowerDiameter")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<double>("UpperDiameter")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Container");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.ContainerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContainerType");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Crop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<double>("CropBaseTemperature")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Crop");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.CropPhase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CropId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EndingWeek")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<int?>("StartingWeek")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CropPhase");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.CropPhaseOptimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CropPhaseOptimal");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.CropPhaseSolutionRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("B")
                        .HasColumnType("float");

                    b.Property<double>("Ca")
                        .HasColumnType("float");

                    b.Property<double>("Cl")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<double>("Cu")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("EC")
                        .HasColumnType("float");

                    b.Property<double>("Fe")
                        .HasColumnType("float");

                    b.Property<double>("H2PO4")
                        .HasColumnType("float");

                    b.Property<double>("HCO3")
                        .HasColumnType("float");

                    b.Property<double>("K")
                        .HasColumnType("float");

                    b.Property<double>("Mg")
                        .HasColumnType("float");

                    b.Property<double>("Mn")
                        .HasColumnType("float");

                    b.Property<double>("Mo")
                        .HasColumnType("float");

                    b.Property<double>("N")
                        .HasColumnType("float");

                    b.Property<double>("NH4")
                        .HasColumnType("float");

                    b.Property<double>("NO3")
                        .HasColumnType("float");

                    b.Property<double>("Na")
                        .HasColumnType("float");

                    b.Property<double>("P")
                        .HasColumnType("float");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<double>("S")
                        .HasColumnType("float");

                    b.Property<double>("SO4")
                        .HasColumnType("float");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<double>("Zn")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CropPhaseSolutionRequirement");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.CropProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Altitude")
                        .HasColumnType("int");

                    b.Property<double>("BetweenContainerDistance")
                        .HasColumnType("float");

                    b.Property<double>("BetweenPlantDistance")
                        .HasColumnType("float");

                    b.Property<double>("BetweenRowDistance")
                        .HasColumnType("float");

                    b.Property<int>("ContainerId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CropId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("DepletionPercentage")
                        .HasColumnType("float");

                    b.Property<double>("DrainThreshold")
                        .HasColumnType("float");

                    b.Property<int>("DropperId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrowingMediumId")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDroppersPerContainer")
                        .HasColumnType("int");

                    b.Property<int>("PlantsPerContainer")
                        .HasColumnType("int");

                    b.Property<int>("ProductionUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.Property<double>("WindSpeedMeasurementHeight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CropProduction");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.CropProductionDevice", b =>
                {
                    b.Property<int>("CropProductionId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("CropProductionId", "DeviceId");

                    b.ToTable("CropProductionDevice");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.CropProductionIrrigationSector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CropProductionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Polygon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CropProductionIrrigationSector");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.DeviceRawData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sensor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceRawData");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Dropper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("FlowRate")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dropper");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeZoneId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Farm");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Fertilizer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApplicationInstructions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ApplicationMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("B")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Brand")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Ca")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cl")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Concentration")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ConcentrationUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cu")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("CurrentStock")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("EC")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Fe")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Formulation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("H2PO4")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("HCO3")
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("IsLiquid")
                        .HasColumnType("bit");

                    b.Property<decimal?>("K")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Mg")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Micronutrients")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("MinimumStock")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Mn")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Mo")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("N")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("NH4")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Na")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("NitrogenPercentage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("P")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("PH")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("PhosphorusPercentage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("PotassiumPercentage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("PricePerUnit")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("S")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("SO4")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("StockUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StorageInstructions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Supplier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("TDS")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<decimal?>("Zn")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.ToTable("Fertilizer");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.FertilizerChemistry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Density")
                        .HasColumnType("float");

                    b.Property<int>("FertilizerId")
                        .HasColumnType("int");

                    b.Property<string>("Formula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPhAdjuster")
                        .HasColumnType("bit");

                    b.Property<double>("Purity")
                        .HasColumnType("float");

                    b.Property<double>("Solubility0")
                        .HasColumnType("float");

                    b.Property<double>("Solubility20")
                        .HasColumnType("float");

                    b.Property<double>("Solubility40")
                        .HasColumnType("float");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("Valence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FertilizerChemistry");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.FertilizerInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FertilizerId")
                        .HasColumnType("int");

                    b.Property<int>("InputPresentationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FertilizerInput");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Graph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Series")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryTimeScale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("YAxisScaleType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Graph");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.GrowingMedium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<double>("ContainerCapacityPercentage")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PermanentWiltingPoint")
                        .HasColumnType("float");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GrowingMedium");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.InputPresentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeasurementUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InputPresentation");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.IrrigationDesign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CalculationResultsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CropProductionId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DesignParametersJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesignType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HydraulicParametersJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTemplate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OptimizationParametersJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TagsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateCategory")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CropProductionId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("IrrigationDesigns");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.IrrigationEngineeringDesign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlertConditions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("ApplicationEfficiency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<string>("AutomationSystemType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("AverageHumidity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AverageTemperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Boron")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Calcium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CalculationErrors")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("CalculationInProgress")
                        .HasColumnType("bit");

                    b.Property<string>("CalculationNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ComplianceRequirementsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentSpecificationsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ContainerDensity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("ContainerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Copper")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostPerSquareMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CropProductionId")
                        .HasColumnType("int");

                    b.Property<decimal>("DailyWaterRequirement")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DesignType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DetailedHydraulicCalculationsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DistributionUniformity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DrainageClass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DropperId")
                        .HasColumnType("int");

                    b.Property<decimal>("ElectricalConductivity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Elevation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmitterFlowRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("EmitterSpacing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EnergyConsumptionPerYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EnergySavingsPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExportFormat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExportedFilePaths")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ExternalSystemId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("FertigationSystemType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FiltrationSystemType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GrowingMediumId")
                        .HasColumnType("int");

                    b.Property<bool>("HasAutomation")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBackflowPrevention")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFertigation")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFiltration")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFlowMeter")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPressureRegulator")
                        .HasColumnType("bit");

                    b.Property<decimal>("InstallationCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InstallationInstructionsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Iron")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IrrigationFrequency")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEconomicallyViable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnvironmentallySound")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHydraulicallyValid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTemplate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastCalculatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastExportedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMonitoringCheck")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LateralPipeDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LateralPipeLength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LateralPipeMaterial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("LateralSpacing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Magnesium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MainPipeDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MainPipeLength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MainPipeMaterial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MaintenanceCostPerYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaintenanceScheduleJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Manganese")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaterialListJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxFlowVelocity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("MeetsAgronomicRequirements")
                        .HasColumnType("bit");

                    b.Property<bool>("MonitoringEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Nitrates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NotificationSettings")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("NumberOfSectors")
                        .HasColumnType("int");

                    b.Property<string>("OperationScheduleJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaybackPeriod")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Phosphorus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlantDensity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Potassium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PumpEfficiency")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("QualityControlChecklistJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendationsAndOptimizations")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("RequiredPumpPower")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("RequiresRecalculation")
                        .HasColumnType("bit");

                    b.Property<string>("RiskAssessmentJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SecondaryPipeDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SecondaryPipeLength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SecondaryPipeMaterial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SlopePercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SoilInfiltrationRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SoilType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SoilWaterHoldingCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SolarRadiation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Sulfur")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SustainabilityScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SystemPressureLoss")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Tags")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TechnicalDrawingsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalArea")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TotalDissolvedSolids")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalMaterialCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalProjectCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSystemFlowRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("UniformityCoefficient")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("ValidationNotes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Version")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("WaterConsumptionPerYear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WaterFlowRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("WaterPh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WaterPressure")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("WaterSavingsPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WaterSourceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("WaterUseEfficiency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WindSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkingPressure")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Zinc")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContainerId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CropProductionId");

                    b.HasIndex("DropperId");

                    b.HasIndex("FarmId");

                    b.HasIndex("GrowingMediumId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("IrrigationEngineeringDesigns");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.IrrigationEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CropProductionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecordDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IrrigationEvent");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.IrrigationMeasurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementVariableId")
                        .HasColumnType("int");

                    b.Property<double>("RecordValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("IrrigationMeasurement");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.IrrigationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CropProductionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Irrigate")
                        .HasColumnType("bit");

                    b.Property<int>("IrrigationTime")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CropProductionIrrigationRequest");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.IrrigationTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DesignParametersJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HydraulicParametersJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("IrrigationTemplates");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AllowedCompanies")
                        .HasColumnType("int");

                    b.Property<int>("AllowedCropProductions")
                        .HasColumnType("int");

                    b.Property<int>("AllowedFarms")
                        .HasColumnType("int");

                    b.Property<int>("AllowedProductionUnits")
                        .HasColumnType("int");

                    b.Property<int>("AllowedUsers")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("License");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AvgValue")
                        .HasColumnType("float");

                    b.Property<int>("CropProductionId")
                        .HasColumnType("int");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<int>("MeasurementVariableId")
                        .HasColumnType("int");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("SumValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Measurement");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.MeasurementBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CropProductionId")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementVariableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("RecordValue")
                        .HasColumnType("float");

                    b.Property<int>("SensorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MeasurementBase");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.MeasurementKPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AvgValue")
                        .HasColumnType("float");

                    b.Property<int>("CropProductionId")
                        .HasColumnType("int");

                    b.Property<int>("KPIId")
                        .HasColumnType("int");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("SumValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MeasurementKPI");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.MeasurementUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BaseMeasureUnitId")
                        .HasColumnType("int");

                    b.Property<double>("ConvertionFactorToBase")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MeasureType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MeasurementUnit");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.MeasurementVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("FactorToMeasurementVariableStandard")
                        .HasColumnType("float");

                    b.Property<int>("MeasurementUnitId")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementVariableStandardId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MeasurementVariable");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.MeasurementVariableStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MeasurementUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MeasurementVariableStandard");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.ProductionUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionUnitTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductionUnit");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.ProductionUnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductionUnitType");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.RelayModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RelayModule");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.RelayModuleCropProductionIrrigationSector", b =>
                {
                    b.Property<int>("RelayModuleId")
                        .HasColumnType("int");

                    b.Property<int>("CropProductionIrrigationSectorId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("RelayModuleId", "CropProductionIrrigationSectorId");

                    b.ToTable("RelayModuleCropProductionIrrigationSector");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementVariableId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfContainers")
                        .HasColumnType("int");

                    b.Property<string>("SensorLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Sensor");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.TimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeZone");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.UserFarm", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UserId", "FarmId");

                    b.ToTable("UserFarm");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.UserStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserStatus");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Water", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CatalogId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Water");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.WaterChemistry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AnalysisDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("B")
                        .HasColumnType("float");

                    b.Property<double>("BO4")
                        .HasColumnType("float");

                    b.Property<double>("Ca")
                        .HasColumnType("float");

                    b.Property<double>("Cl")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<double>("Cu")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("EC")
                        .HasColumnType("float");

                    b.Property<double>("Fe")
                        .HasColumnType("float");

                    b.Property<double>("H2PO4")
                        .HasColumnType("float");

                    b.Property<double>("HCO3")
                        .HasColumnType("float");

                    b.Property<double>("K")
                        .HasColumnType("float");

                    b.Property<double>("MOO4")
                        .HasColumnType("float");

                    b.Property<double>("Mg")
                        .HasColumnType("float");

                    b.Property<double>("Mn")
                        .HasColumnType("float");

                    b.Property<double>("NH4")
                        .HasColumnType("float");

                    b.Property<double>("NO3")
                        .HasColumnType("float");

                    b.Property<double>("Na")
                        .HasColumnType("float");

                    b.Property<double>("SO4")
                        .HasColumnType("float");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("WaterId")
                        .HasColumnType("int");

                    b.Property<double>("Zn")
                        .HasColumnType("float");

                    b.Property<double>("pH")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("WaterChemistry");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Fertilizer", b =>
                {
                    b.HasOne("AgriSmart.Core.Entities.Catalog", "Catalog")
                        .WithMany()
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.IrrigationDesign", b =>
                {
                    b.HasOne("AgriSmart.Core.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriSmart.Core.Entities.CropProduction", "CropProduction")
                        .WithMany()
                        .HasForeignKey("CropProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriSmart.Core.Entities.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Creator");

                    b.Navigation("CropProduction");

                    b.Navigation("Updater");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.IrrigationEngineeringDesign", b =>
                {
                    b.HasOne("AgriSmart.Core.Entities.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApprovedBy");

                    b.HasOne("AgriSmart.Core.Entities.Company", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriSmart.Core.Entities.Container", "Container")
                        .WithMany()
                        .HasForeignKey("ContainerId");

                    b.HasOne("AgriSmart.Core.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriSmart.Core.Entities.CropProduction", "CropProduction")
                        .WithMany()
                        .HasForeignKey("CropProductionId");

                    b.HasOne("AgriSmart.Core.Entities.Dropper", "Dropper")
                        .WithMany()
                        .HasForeignKey("DropperId");

                    b.HasOne("AgriSmart.Core.Entities.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId");

                    b.HasOne("AgriSmart.Core.Entities.GrowingMedium", "GrowingMedium")
                        .WithMany()
                        .HasForeignKey("GrowingMediumId");

                    b.HasOne("AgriSmart.Core.Entities.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("Approver");

                    b.Navigation("Client");

                    b.Navigation("Container");

                    b.Navigation("Creator");

                    b.Navigation("CropProduction");

                    b.Navigation("Dropper");

                    b.Navigation("Farm");

                    b.Navigation("GrowingMedium");

                    b.Navigation("Updater");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.IrrigationTemplate", b =>
                {
                    b.HasOne("AgriSmart.Core.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Sensor", b =>
                {
                    b.HasOne("AgriSmart.Core.Entities.Device", "Device")
                        .WithMany("Sensors")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("AgriSmart.Core.Entities.Device", b =>
                {
                    b.Navigation("Sensors");
                });
#pragma warning restore 612, 618
        }
    }
}
